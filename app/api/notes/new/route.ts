import { NextRequest, NextResponse } from 'next/server';
import databaseService from '@/services/DatabaseService/DatabaseService';
import { logger } from '@/utils/logger';
import type { Note } from '@/types/Note';


/**
 * POST /api/notes/new
 * Creates a new empty note with a database-generated UUID
 */
export async function POST(request: NextRequest) {
    // Create an empty note without an ID (will be generated by DB)
    const note: Note = {
      title: 'Untitled Note',
      content: '',
      userId: 'anonymous', // Use anonymous user for now
      createdAt: new Date(),
      updatedAt: new Date()
    };
    
    // Save the note to the database to get DB-generated ID
    const savedNote = await databaseService.saveNote(note);
    
    if (!savedNote || !savedNote.id) {
      throw new Error('Failed to create note with database-generated ID');
    }
    
    logger.info(`Created new note with database-generated ID: ${savedNote.id}`);
    
    // Return the new note ID from the database
    return NextResponse.json({
      success: true,
      message: 'New note created successfully',
      noteId: savedNote.id
    }, { status: 201 });
    
  } catch (error) {
    // Log error
    logger.error('Error creating new note', error);
    
    // Return error response
    return NextResponse.json(
      { 
        success: false, 
        message: 'Failed to create new note',
        error: (error as Error).message
      }, 
      { status: 500 }
    );
  }
}